package iti.jets.persistence.entities;// default package
// Generated 4 Mar 2024, 00:40:35 by Hibernate Tools 6.0.2.Final


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name="customer"
    ,catalog="ecommercedb"
    , uniqueConstraints = {@UniqueConstraint(columnNames="email"), @UniqueConstraint(columnNames="phone_number")} 
)
public class Customer  implements java.io.Serializable {


     private int customerId;
     private CreditCard creditCard;
     private Cart cart;
     private String customerName;
     private byte[] customerImage;
     private String phoneNumber;
     private String email;
     private String password;
     private BigDecimal creditLimit;
     private Date dob;
     private Set<CustomerOrder> customerOrders = new HashSet<CustomerOrder>(0);

    public Customer() {
    }

	
    public Customer(int customerId) {
        this.customerId = customerId;
    }
    public Customer(int customerId, CreditCard creditCard, Cart cart, String customerName, byte[] customerImage, String phoneNumber, String email, String password, BigDecimal creditLimit, Date dob, Set<CustomerOrder> customerOrders) {
       this.customerId = customerId;
       this.creditCard = creditCard;
       this.cart = cart;
       this.customerName = customerName;
       this.customerImage = customerImage;
       this.phoneNumber = phoneNumber;
       this.email = email;
       this.password = password;
       this.creditLimit = creditLimit;
       this.dob = dob;
       this.customerOrders = customerOrders;
    }
   
     @Id 

    
    @Column(name="customer_id", unique=true, nullable=false)
    public int getCustomerId() {
        return this.customerId;
    }
    
    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="credit_card_id")
    public CreditCard getCreditCard() {
        return this.creditCard;
    }
    
    public void setCreditCard(CreditCard creditCard) {
        this.creditCard = creditCard;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cart_id")
    public Cart getCart() {
        return this.cart;
    }
    
    public void setCart(Cart cart) {
        this.cart = cart;
    }

    
    @Column(name="customer_name", length=255)
    public String getCustomerName() {
        return this.customerName;
    }
    
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    
    @Column(name="customer_image")
    public byte[] getCustomerImage() {
        return this.customerImage;
    }
    
    public void setCustomerImage(byte[] customerImage) {
        this.customerImage = customerImage;
    }

    
    @Column(name="phone_number", unique=true, length=15)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    
    @Column(name="email", unique=true, length=50)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="password", length=255)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="credit_limit", precision=10, scale=2)
    public BigDecimal getCreditLimit() {
        return this.creditLimit;
    }
    
    public void setCreditLimit(BigDecimal creditLimit) {
        this.creditLimit = creditLimit;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dob", length=10)
    public Date getDob() {
        return this.dob;
    }
    
    public void setDob(Date dob) {
        this.dob = dob;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customer")
    public Set<CustomerOrder> getCustomerOrders() {
        return this.customerOrders;
    }
    
    public void setCustomerOrders(Set<CustomerOrder> customerOrders) {
        this.customerOrders = customerOrders;
    }




}


